{"ast":null,"code":"var _jsxFileName = \"/home/xana/Dev/FreeCodeCamp/drum-pad-machine/src/components/DrumMachine/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { SoundsContext } from \"../../SoundsContext\";\nimport { Grid } from \"../Grid\";\nimport { SoundButton } from \"../SoundButton\";\nimport { VolumeController } from \"../VolumeController\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrumMachine = () => {\n  _s();\n\n  const audioTag = useRef(null);\n  const [currentSound, setCurrentSound] = useState(null);\n  const sounds = useContext(SoundsContext);\n  const soundsKey = Object.keys(sounds.byKeyCode);\n\n  const playSound = (letter, keyCode) => {\n    if (audioTag.current != null) {\n      console.log(audioTag.current);\n      audioTag.current.src = `/assets/sounds/${keyCode}-${letter}.wav`;\n      audioTag.current.play();\n    }\n  };\n\n  const onSoundButtonClick = useCallback((keyCode, sound) => {\n    setCurrentSound({\n      keyCode,\n      sound\n    });\n  }, []);\n  const onKeyPress = useCallback(ev => {\n    const keyCode = ev.key.charCodeAt(0);\n    playSound(ev.key.toUpperCase(), keyCode);\n    console.log(ev);\n  }, []);\n  useEffect(() => {\n    if (!currentSound) {\n      return;\n    }\n\n    playSound(currentSound.sound.letter, currentSound.keyCode);\n  }, [currentSound]);\n  useEffect(() => {\n    document.addEventListener(\"keypress\", onKeyPress);\n    return () => {\n      document.removeEventListener(\"keypress\", onKeyPress);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioTag,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(VolumeController, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: soundsKey.sort((a, b) => sounds.byKeyCode[a].order - sounds.byKeyCode[b].order).map((key, index) => /*#__PURE__*/_jsxDEV(SoundButton, {\n        keyCode: key,\n        letter: sounds.byKeyCode[key].letter,\n        soundSource: sounds.byKeyCode[key].source,\n        onClick: onSoundButtonClick.bind(null, key, sounds.byKeyCode[key])\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrumMachine, \"qb8gUoRsr5vpjq8UECgYgmx3qws=\");\n\n_c = DrumMachine;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrumMachine\");","map":{"version":3,"sources":["/home/xana/Dev/FreeCodeCamp/drum-pad-machine/src/components/DrumMachine/index.js"],"names":["React","useCallback","useContext","useEffect","useRef","useState","SoundsContext","Grid","SoundButton","VolumeController","DrumMachine","audioTag","currentSound","setCurrentSound","sounds","soundsKey","Object","keys","byKeyCode","playSound","letter","keyCode","current","console","log","src","play","onSoundButtonClick","sound","onKeyPress","ev","key","charCodeAt","toUpperCase","document","addEventListener","removeEventListener","display","sort","a","b","order","map","index","source","bind"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { SoundsContext } from \"../../SoundsContext\";\nimport { Grid } from \"../Grid\";\nimport { SoundButton } from \"../SoundButton\";\nimport { VolumeController } from \"../VolumeController\";\n\nexport const DrumMachine = () => {\n  const audioTag = useRef(null);\n  const [currentSound, setCurrentSound] = useState(null);\n  const sounds = useContext(SoundsContext);\n  const soundsKey = Object.keys(sounds.byKeyCode);\n\n  const playSound = (letter, keyCode) => {\n    if (audioTag.current != null) {\n      console.log(audioTag.current);\n      audioTag.current.src = `/assets/sounds/${keyCode}-${letter}.wav`;\n      audioTag.current.play();\n    }\n  };\n\n  const onSoundButtonClick = useCallback((keyCode, sound) => {\n    setCurrentSound({ keyCode, sound });\n  }, []);\n\n  const onKeyPress = useCallback((ev) => {\n    const keyCode = ev.key.charCodeAt(0);\n    playSound(ev.key.toUpperCase(), keyCode);\n    console.log(ev);\n  }, []);\n\n  useEffect(() => {\n    if (!currentSound) {\n      return;\n    }\n    playSound(currentSound.sound.letter, currentSound.keyCode);\n  }, [currentSound]);\n\n  useEffect(() => {\n    document.addEventListener(\"keypress\", onKeyPress);\n\n    return () => {\n      document.removeEventListener(\"keypress\", onKeyPress);\n    };\n  });\n\n  return (\n    <div className=\"App\">\n      <audio ref={audioTag} style={{ display: \"none\" }} />\n      <header className=\"App-header\">\n        <VolumeController />\n      </header>\n      <Grid>\n        {soundsKey\n          .sort((a, b) => sounds.byKeyCode[a].order - sounds.byKeyCode[b].order)\n          .map((key, index) => (\n            <SoundButton\n              key={key}\n              keyCode={key}\n              letter={sounds.byKeyCode[key].letter}\n              soundSource={sounds.byKeyCode[key].source}\n              onClick={onSoundButtonClick.bind(\n                null,\n                key,\n                sounds.byKeyCode[key]\n              )}\n            />\n          ))}\n      </Grid>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}