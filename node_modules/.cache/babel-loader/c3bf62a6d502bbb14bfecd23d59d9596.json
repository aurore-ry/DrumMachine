{"ast":null,"code":"var _jsxFileName = \"/home/xana/Dev/FreeCodeCamp/drum-pad-machine/src/components/DrumMachine/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { SoundsContext } from \"../../SoundsContext\";\nimport { Grid } from \"../Grid\";\nimport { SoundButton } from \"../SoundButton\";\nimport { VolumeController } from \"../VolumeController\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrumMachine = () => {\n  _s();\n\n  const sounds = useContext(SoundsContext);\n  const soundsKey = Object.keys(sounds.byKeyCode);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    id: \"drum-machine\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      id: \"display\",\n      children: /*#__PURE__*/_jsxDEV(VolumeController, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: soundsKey.sort((a, b) => sounds.byKeyCode[a].order - sounds.byKeyCode[b].order).map(keyCode => {\n        const {\n          letter\n        } = sounds.byKeyCode[keyCode];\n        return /*#__PURE__*/_jsxDEV(SoundButton, {\n          keyCode: keyCode,\n          letter: letter,\n          soundSource: `/assets/sounds/${keyCode}-${letter}.wav`\n        }, keyCode, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrumMachine, \"Cx2au5TuWpKM6x7wtahfMsVO+X0=\");\n\n_c = DrumMachine;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrumMachine\");","map":{"version":3,"sources":["/home/xana/Dev/FreeCodeCamp/drum-pad-machine/src/components/DrumMachine/index.js"],"names":["React","useCallback","useContext","useEffect","useRef","useState","SoundsContext","Grid","SoundButton","VolumeController","DrumMachine","sounds","soundsKey","Object","keys","byKeyCode","sort","a","b","order","map","keyCode","letter"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,WADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,QALF,QAMO,OANP;AAOA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAMC,MAAM,GAAGT,UAAU,CAACI,aAAD,CAAzB;AACA,QAAMM,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAM,CAACI,SAAnB,CAAlB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,EAAE,EAAC,cAAxB;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,EAAE,EAAC,SAAlC;AAAA,6BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAA,gBACGH,SAAS,CACPI,IADF,CACO,CAACC,CAAD,EAAIC,CAAJ,KAAUP,MAAM,CAACI,SAAP,CAAiBE,CAAjB,EAAoBE,KAApB,GAA4BR,MAAM,CAACI,SAAP,CAAiBG,CAAjB,EAAoBC,KADjE,EAEEC,GAFF,CAEOC,OAAD,IAAa;AAChB,cAAM;AAAEC,UAAAA;AAAF,YAAaX,MAAM,CAACI,SAAP,CAAiBM,OAAjB,CAAnB;AACA,4BACE,QAAC,WAAD;AAEE,UAAA,OAAO,EAAEA,OAFX;AAGE,UAAA,MAAM,EAAEC,MAHV;AAIE,UAAA,WAAW,EAAG,kBAAiBD,OAAQ,IAAGC,MAAO;AAJnD,WACOD,OADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OAZF;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA1BM;;GAAMX,W;;KAAAA,W","sourcesContent":["import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { SoundsContext } from \"../../SoundsContext\";\nimport { Grid } from \"../Grid\";\nimport { SoundButton } from \"../SoundButton\";\nimport { VolumeController } from \"../VolumeController\";\n\nexport const DrumMachine = () => {\n  const sounds = useContext(SoundsContext);\n  const soundsKey = Object.keys(sounds.byKeyCode);\n\n  return (\n    <div className=\"App\" id=\"drum-machine\">\n      <header className=\"App-header\" id=\"display\">\n        <VolumeController />\n      </header>\n      <Grid>\n        {soundsKey\n          .sort((a, b) => sounds.byKeyCode[a].order - sounds.byKeyCode[b].order)\n          .map((keyCode) => {\n            const { letter } = sounds.byKeyCode[keyCode];\n            return (\n              <SoundButton\n                key={keyCode}\n                keyCode={keyCode}\n                letter={letter}\n                soundSource={`/assets/sounds/${keyCode}-${letter}.wav`}\n              />\n            );\n          })}\n      </Grid>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}