{"ast":null,"code":"var _jsxFileName = \"/home/xana/Dev/FreeCodeCamp/drum-pad-machine/src/components/DrumMachine/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { SoundsContext } from \"../../SoundsContext\";\nimport { Grid } from \"../Grid\";\nimport { SoundButton } from \"../SoundButton\";\nimport { VolumeController } from \"../VolumeController\";\nimport \"./styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrumMachine = () => {\n  _s();\n\n  const [currentSoundKey, setCurrentSoundKey] = useState(null);\n  const sounds = useContext(SoundsContext);\n  const soundsKey = Object.keys(sounds.byKeyCode);\n  const currentSound = sounds.byKeyCode[currentSoundKey];\n  console.log(currentSoundKey, currentSound);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    id: \"drum-machine\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"display\",\n      children: currentSound != null ? currentSound.name : \"Click a buton to play!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: soundsKey.sort((a, b) => sounds.byKeyCode[a].order - sounds.byKeyCode[b].order).map(keyCode => {\n        const {\n          letter\n        } = sounds.byKeyCode[keyCode];\n        return /*#__PURE__*/_jsxDEV(SoundButton, {\n          isActive: keyCode === currentSoundKey,\n          keyCode: keyCode,\n          letter: letter,\n          soundSource: `/assets/sounds/${keyCode}-${letter}.wav`,\n          onPlay: keyCode => setCurrentSoundKey(keyCode)\n        }, keyCode, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrumMachine, \"+ZnIVCyyXEIWMY5eBwF7DirmJZo=\");\n\n_c = DrumMachine;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrumMachine\");","map":{"version":3,"sources":["/home/xana/Dev/FreeCodeCamp/drum-pad-machine/src/components/DrumMachine/index.js"],"names":["React","useContext","useState","SoundsContext","Grid","SoundButton","VolumeController","DrumMachine","currentSoundKey","setCurrentSoundKey","sounds","soundsKey","Object","keys","byKeyCode","currentSound","console","log","name","sort","a","b","order","map","keyCode","letter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,OAAO,eAAP;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,IAAD,CAAtD;AAEA,QAAMQ,MAAM,GAAGT,UAAU,CAACE,aAAD,CAAzB;AACA,QAAMQ,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAM,CAACI,SAAnB,CAAlB;AACA,QAAMC,YAAY,GAAGL,MAAM,CAACI,SAAP,CAAiBN,eAAjB,CAArB;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,eAAZ,EAA6BO,YAA7B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,EAAE,EAAC,cAAxB;AAAA,4BAEE;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAA,gBACGA,YAAY,IAAI,IAAhB,GAAuBA,YAAY,CAACG,IAApC,GAA2C;AAD9C;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,IAAD;AAAA,gBACGP,SAAS,CACPQ,IADF,CACO,CAACC,CAAD,EAAIC,CAAJ,KAAUX,MAAM,CAACI,SAAP,CAAiBM,CAAjB,EAAoBE,KAApB,GAA4BZ,MAAM,CAACI,SAAP,CAAiBO,CAAjB,EAAoBC,KADjE,EAEEC,GAFF,CAEOC,OAAD,IAAa;AAChB,cAAM;AAAEC,UAAAA;AAAF,YAAaf,MAAM,CAACI,SAAP,CAAiBU,OAAjB,CAAnB;AACA,4BACE,QAAC,WAAD;AACE,UAAA,QAAQ,EAAEA,OAAO,KAAKhB,eADxB;AAGE,UAAA,OAAO,EAAEgB,OAHX;AAIE,UAAA,MAAM,EAAEC,MAJV;AAKE,UAAA,WAAW,EAAG,kBAAiBD,OAAQ,IAAGC,MAAO,MALnD;AAME,UAAA,MAAM,EAAGD,OAAD,IAAaf,kBAAkB,CAACe,OAAD;AANzC,WAEOA,OAFP;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAdF;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAlCM;;GAAMjB,W;;KAAAA,W","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { SoundsContext } from \"../../SoundsContext\";\nimport { Grid } from \"../Grid\";\nimport { SoundButton } from \"../SoundButton\";\nimport { VolumeController } from \"../VolumeController\";\n\nimport \"./styles.scss\";\n\nexport const DrumMachine = () => {\n  const [currentSoundKey, setCurrentSoundKey] = useState(null);\n\n  const sounds = useContext(SoundsContext);\n  const soundsKey = Object.keys(sounds.byKeyCode);\n  const currentSound = sounds.byKeyCode[currentSoundKey];\n\n  console.log(currentSoundKey, currentSound);\n\n  return (\n    <div className=\"App\" id=\"drum-machine\">\n      {/* <VolumeController /> */}\n      <header id=\"display\">\n        {currentSound != null ? currentSound.name : \"Click a buton to play!\"}\n      </header>\n      <Grid>\n        {soundsKey\n          .sort((a, b) => sounds.byKeyCode[a].order - sounds.byKeyCode[b].order)\n          .map((keyCode) => {\n            const { letter } = sounds.byKeyCode[keyCode];\n            return (\n              <SoundButton\n                isActive={keyCode === currentSoundKey}\n                key={keyCode}\n                keyCode={keyCode}\n                letter={letter}\n                soundSource={`/assets/sounds/${keyCode}-${letter}.wav`}\n                onPlay={(keyCode) => setCurrentSoundKey(keyCode)}\n              />\n            );\n          })}\n      </Grid>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}