{"ast":null,"code":"var _jsxFileName = \"/home/xana/Dev/FreeCodeCamp/drum-pad-machine/src/components/DrumMachine/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { SoundsContext } from \"../../SoundsContext\";\nimport { Grid } from \"../Grid\";\nimport { SoundButton } from \"../SoundButton\";\nimport { VolumeController } from \"../VolumeController\";\nimport \"./styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrumMachine = () => {\n  _s();\n\n  const [currentSoundKey, setCurrentSoundKey] = useState(null);\n  const sounds = useContext(SoundsContext);\n  const soundsKey = Object.keys(sounds.byKeyCode);\n  const currentSound = sounds.byKeyCode[currentSoundKey];\n  console.log(currentSoundKey, currentSound);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"device\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"display\",\n        className: \"container\",\n        children: currentSound != null ? currentSound.name : \"Click a buton to play!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"volume\",\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(VolumeController, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"drum-machine\",\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: soundsKey.sort((a, b) => sounds.byKeyCode[a].order - sounds.byKeyCode[b].order).map(keyCode => {\n            const {\n              letter\n            } = sounds.byKeyCode[keyCode];\n            return /*#__PURE__*/_jsxDEV(SoundButton, {\n              keyCode: keyCode,\n              backgroundColor: color,\n              letter: letter,\n              soundSource: `/assets/sounds/${keyCode}-${letter}.wav`,\n              onPlay: keyCode => setCurrentSoundKey(keyCode)\n            }, keyCode, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrumMachine, \"+ZnIVCyyXEIWMY5eBwF7DirmJZo=\");\n\n_c = DrumMachine;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrumMachine\");","map":{"version":3,"sources":["/home/xana/Dev/FreeCodeCamp/drum-pad-machine/src/components/DrumMachine/index.js"],"names":["React","useContext","useState","SoundsContext","Grid","SoundButton","VolumeController","DrumMachine","currentSoundKey","setCurrentSoundKey","sounds","soundsKey","Object","keys","byKeyCode","currentSound","console","log","name","sort","a","b","order","map","keyCode","letter","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,OAAO,eAAP;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,IAAD,CAAtD;AAEA,QAAMQ,MAAM,GAAGT,UAAU,CAACE,aAAD,CAAzB;AACA,QAAMQ,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAM,CAACI,SAAnB,CAAlB;AACA,QAAMC,YAAY,GAAGL,MAAM,CAACI,SAAP,CAAiBN,eAAjB,CAArB;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,eAAZ,EAA6BO,YAA7B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAkB,QAAA,SAAS,EAAC,WAA5B;AAAA,kBACGA,YAAY,IAAI,IAAhB,GAAuBA,YAAY,CAACG,IAApC,GAA2C;AAD9C;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAiB,QAAA,SAAS,EAAC,WAA3B;AAAA,+BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAK,QAAA,EAAE,EAAC,cAAR;AAAuB,QAAA,SAAS,EAAC,WAAjC;AAAA,+BACE,QAAC,IAAD;AAAA,oBACGP,SAAS,CACPQ,IADF,CAEG,CAACC,CAAD,EAAIC,CAAJ,KAAUX,MAAM,CAACI,SAAP,CAAiBM,CAAjB,EAAoBE,KAApB,GAA4BZ,MAAM,CAACI,SAAP,CAAiBO,CAAjB,EAAoBC,KAF7D,EAIEC,GAJF,CAIOC,OAAD,IAAa;AAChB,kBAAM;AAAEC,cAAAA;AAAF,gBAAaf,MAAM,CAACI,SAAP,CAAiBU,OAAjB,CAAnB;AACA,gCACE,QAAC,WAAD;AAEE,cAAA,OAAO,EAAEA,OAFX;AAGE,cAAA,eAAe,EAAEE,KAHnB;AAIE,cAAA,MAAM,EAAED,MAJV;AAKE,cAAA,WAAW,EAAG,kBAAiBD,OAAQ,IAAGC,MAAO,MALnD;AAME,cAAA,MAAM,EAAGD,OAAD,IAAaf,kBAAkB,CAACe,OAAD;AANzC,eACOA,OADP;AAAA;AAAA;AAAA;AAAA,oBADF;AAUD,WAhBF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CA1CM;;GAAMjB,W;;KAAAA,W","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { SoundsContext } from \"../../SoundsContext\";\nimport { Grid } from \"../Grid\";\nimport { SoundButton } from \"../SoundButton\";\nimport { VolumeController } from \"../VolumeController\";\n\nimport \"./styles.scss\";\n\nexport const DrumMachine = () => {\n  const [currentSoundKey, setCurrentSoundKey] = useState(null);\n\n  const sounds = useContext(SoundsContext);\n  const soundsKey = Object.keys(sounds.byKeyCode);\n  const currentSound = sounds.byKeyCode[currentSoundKey];\n\n  console.log(currentSoundKey, currentSound);\n\n  return (\n    <div className=\"App\">\n      <div id=\"device\">\n        <div id=\"display\" className=\"container\">\n          {currentSound != null ? currentSound.name : \"Click a buton to play!\"}\n        </div>\n        <div id=\"volume\" className=\"container\">\n          <VolumeController />\n        </div>\n        <div id=\"drum-machine\" className=\"container\">\n          <Grid>\n            {soundsKey\n              .sort(\n                (a, b) => sounds.byKeyCode[a].order - sounds.byKeyCode[b].order\n              )\n              .map((keyCode) => {\n                const { letter } = sounds.byKeyCode[keyCode];\n                return (\n                  <SoundButton\n                    key={keyCode}\n                    keyCode={keyCode}\n                    backgroundColor={color}\n                    letter={letter}\n                    soundSource={`/assets/sounds/${keyCode}-${letter}.wav`}\n                    onPlay={(keyCode) => setCurrentSoundKey(keyCode)}\n                  />\n                );\n              })}\n          </Grid>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}